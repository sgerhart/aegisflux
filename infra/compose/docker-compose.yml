services:
  nats:
    image: nats:2.10-alpine
    ports:
      - "4222:4222"
    command: ["--jetstream"]

  timescale:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_DB=aegisflux
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ../../data/timeseries/init.sql:/docker-entrypoint-initdb.d/init.sql

  neo4j:
    image: neo4j:5.15-community
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - ../../data/graph/init.cypher:/var/lib/neo4j/import/init.cypher

  ingest:
    build: ../../backend/ingest/backend/ingest
    env_file: ["../../.env"]
    depends_on: [nats]
    ports:
      - "50052:50051"
      - "9091:9090"
    environment:
      - NATS_URL=nats://nats:4222
      
  etl-enrich:
    build: ../../backend/etl-enrich
    env_file: ["../../.env"]
    depends_on: [nats, timescale, neo4j]
    environment:
      - NATS_URL=nats://nats:4222
      - PG_HOST=timescale
      - PG_PORT=5432
      - PG_DB=aegisflux
      - PG_USER=postgres
      - PG_PASSWORD=password
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - AF_ENV=dev
      - AF_FAKE_RDNS=true

  correlator:
    build: ../../backend/correlator
    env_file: ["../../.env"]
    depends_on: [nats, config-api]
    ports:
      - "8082:8082"
    environment:
      - CORR_NATS_URL=nats://nats:4222
      - CORR_HTTP_ADDR=:8082
      - CONFIG_API_URL=http://config-api:8085
      - CORR_HOT_RELOAD=false

  decision:
    build:
      context: ../../
      dockerfile: backend/decision/Dockerfile
    env_file: ["../../.env"]
    depends_on: [nats, neo4j, config-api]
    ports:
      - "8083:8083"
    environment:
      - DECISION_NATS_URL=nats://nats:4222
      - DECISION_HTTP_ADDR=:8083
      - CONFIG_API_URL=http://config-api:8085
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password

  vault:
    image: hashicorp/vault:1.16
    container_name: aegisflux-vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    cap_add: ["IPC_LOCK"]
    volumes:
      - vault-data:/vault/file
    command: >
      sh -c "vault server -dev -dev-root-token-id=${VAULT_DEV_ROOT_TOKEN_ID:-root}
             -dev-listen-address=0.0.0.0:8200"

  config-api:
    build: ../../backend/config-api
    env_file: ["../../.env"]
    depends_on: [timescale, nats]
    ports:
      - "8085:8085"
    environment:
      - PG_HOST=timescale
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASS=password
      - PG_DB=aegisflux
      - NATS_URL=nats://nats:4222
      - CONFIG_API_HTTP_ADDR=:8085

  bpf-registry:
    build: ../../backend/bpf-registry
    env_file: ["../../.env"]
    depends_on: [vault]
    ports:
      - "8090:8090"
    volumes:
      - bpf_artifacts:/data/artifacts
    environment:
      - BPF_REGISTRY_HTTP_ADDR=:8090
      - BPF_REGISTRY_DATA_DIR=/data/artifacts
      - BPF_REGISTRY_LOG_LEVEL=INFO
      - VAULT_ADDR=http://vault:8200
      - BPF_REGISTRY_SIGNER_PATH=secret/data/bpf-registry/signer
      - VAULT_DEV_MODE=true

  orchestrator:
    build:
      context: ../../
      dockerfile: backend/orchestrator/Dockerfile
    env_file: ["../../.env"]
    depends_on: [nats, bpf-registry, decision]
    ports:
      - "8084:8084"
    volumes:
      - ../../bpf-templates:/app/bpf-templates:ro
    environment:
      - ORCHESTRATOR_NATS_URL=nats://nats:4222
      - ORCHESTRATOR_HTTP_ADDR=:8084
      - BPF_REGISTRY_URL=http://bpf-registry:8090
      - DECISION_API_URL=http://decision:8083
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - ORCHESTRATOR_LOG_LEVEL=INFO
      - EBPF_TEMPLATE_DIR=/app/bpf-templates

  cve-sync:
    build: ../../feeds/cve-sync
    env_file: ["../../.env"]
    depends_on: [vault, nats]
    environment:
      - NATS_URL=nats://nats:4222
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - VAULT_DEV_MODE=true
    restart: unless-stopped

  local-agent-dev:
    build:
      context: ../../
      dockerfile: agents/local-agent/Dockerfile
    env_file: ["../../.env"]
    privileged: true
    pid: "host"
    network_mode: "host"
    depends_on: [bpf-registry, nats]
    environment:
      - AGENT_HOST_ID=web-01
      - AGENT_REGISTRY_URL=http://localhost:8090
      - AGENT_NATS_URL=nats://localhost:4222
      - AGENT_VAULT_URL=http://localhost:8200
      - AGENT_VAULT_TOKEN=root
      - AGENT_HTTP_PORT=7070
      - AGENT_LOG_LEVEL=info

volumes:
  timescale_data:
  neo4j_data:
  vault-data:
  bpf_artifacts:
