#!/usr/bin/env python3
"""
Example usage of the CVE sync service.
Demonstrates how to use the service with different configurations.
"""

import asyncio
import os
import sys
from pathlib import Path

# Add the cve_sync module to the path
sys.path.insert(0, str(Path(__file__).parent))

from cve_sync.main import fetch_all_cves, publish_cves_to_nats

async def example_without_api_key():
    """Example: Fetch CVEs without API key (limited to 5 requests/minute)."""
    print("üîç Example: Fetching CVEs without API key (limited rate)")
    print("This will fetch only the first 2 pages for demonstration...")
    
    # Limit to 2 pages for demo
    cves = await fetch_all_cves(max_pages=2)
    
    print(f"üìä Fetched {len(cves)} CVEs")
    
    if cves:
        print("\nüìã Sample CVE:")
        sample_cve = cves[0]
        print(f"  CVE ID: {sample_cve['cve_id']}")
        print(f"  Published: {sample_cve['published']}")
        print(f"  Descriptions: {len(sample_cve['descriptions'])}")
        print(f"  CVSS Scores: {len(sample_cve['cvss']['base'])} versions")
        print(f"  CWE Entries: {len(sample_cve['cwe'])}")
        print(f"  Affected Products: {len(sample_cve['affected_products'])}")
        print(f"  References: {len(sample_cve['references'])}")
    
    return cves

async def example_with_api_key():
    """Example: Fetch CVEs with API key (higher rate limit)."""
    print("üîë Example: Fetching CVEs with API key (higher rate)")
    
    # Check if API key is set
    api_key = os.getenv("NVD_API_KEY")
    if not api_key:
        print("‚ö†Ô∏è  NVD_API_KEY not set. Using limited rate...")
        return await example_without_api_key()
    
    print(f"Using API key: {api_key[:8]}...")
    
    # Fetch more pages with API key
    cves = await fetch_all_cves(api_key=api_key, max_pages=5)
    
    print(f"üìä Fetched {len(cves)} CVEs with API key")
    return cves

async def example_publish_to_nats():
    """Example: Publish CVEs to NATS."""
    print("üì° Example: Publishing CVEs to NATS")
    
    # Get NATS URL
    nats_url = os.getenv("NATS_URL", "nats://localhost:4222")
    print(f"Connecting to NATS: {nats_url}")
    
    # Fetch a small sample
    cves = await fetch_all_cves(max_pages=1)
    
    if not cves:
        print("‚ùå No CVEs to publish")
        return
    
    print(f"Publishing {len(cves)} CVEs to NATS...")
    
    try:
        await publish_cves_to_nats(cves, nats_url)
        print("‚úÖ Successfully published CVEs to NATS")
    except Exception as e:
        print(f"‚ùå Failed to publish to NATS: {e}")
        print("Make sure NATS server is running on localhost:4222")

async def main():
    """Main example function."""
    print("üöÄ CVE Sync Service Examples\n")
    
    # Example 1: Without API key
    print("=" * 50)
    await example_without_api_key()
    print()
    
    # Example 2: With API key (if available)
    print("=" * 50)
    await example_with_api_key()
    print()
    
    # Example 3: Publish to NATS
    print("=" * 50)
    await example_publish_to_nats()
    print()
    
    print("üéâ Examples completed!")

if __name__ == "__main__":
    asyncio.run(main())
